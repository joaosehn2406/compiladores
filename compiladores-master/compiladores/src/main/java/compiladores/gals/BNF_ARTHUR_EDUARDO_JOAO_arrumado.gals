#Options
GenerateScanner = true
GenerateParser = true
Language = Java
ScannerName = Lexico
ParserName = Sintatico
SemanticName = Semantico
ScannerCaseSensitive = true
ScannerTable = Compact
Input = String
Parser = LL
#RegularDefinitions
mai: [A-z]

min: [a-z]

dig: [0-9]

dig1: [1-9]

dig_int: {dig1} {dig}? {dig}? {dig}? {dig}?

dig_int2:  {dig}? {dig}? {dig}? {dig}? {dig1}

comentarioDeLinha: "/*" (.)*

comentarioDeBloco:"{" [^\{\}]* "}"
#Tokens
identificador: ( {min} | {mai} {min} )+ ("_" ({dig})+)?

constanteInt: {dig1} {dig}? {dig}? {dig}? {dig}? | 0

constanteFloat:  ( {dig_int} | 0) "." ( {dig_int2} | 0)

constanteString: \" [^\n\"\\]* \"

// palavras reservadas

pr_add = identificador: "add"
pr_and = identificador: "and"
pr_begin = identificador: "begin"
pr_bool = identificador: "bool"
pr_count = identificador: "count"
pr_delete = identificador: "delete"
pr_do = identificador: "do"
pr_elementOf = identificador: "elementOf"
pr_else = identificador: "else"
pr_end = identificador: "end"
pr_false = identificador: "false"
pr_float = identificador: "float"
pr_if = identificador: "if"
pr_int = identificador: "int"
pr_list = identificador: "list"
pr_not = identificador: "not"
pr_or = identificador: "or"
pr_print = identificador: "print"
pr_read = identificador: "read"
pr_size = identificador: "size"
pr_string = identificador: "string"
pr_true = identificador: "true"
pr_until = identificador: "until"

// símbolos especiais

"+"
"-"
"*"
"/"
"=="
"~="
"<"
">"
"="
"<-"
"("
")"
";"
","

// reconhecer e ignorar caracteres de formatação

:[\s\t\n]

// reconhecer e ignorar comentários

:!{comentarioDeLinha}
:!{comentarioDeBloco}




#NonTerminals
<programa>
<lista_de_instrucoes>
<instrucao>
<dec_var>
<comando>
<tipo>
<tipos>
<lista_de_identificadores>
<list_tipo>
<elemento>
<posicao>
<entrada_dados>
<lista_de_entrada>
<constante_string>
<saida_dados>
<lista_de_expressoes>
<selecao>
<else>
<lista_de_comandos>
<repeticao>
<expressao>
<expressao_>
<valor>
<relacional>
<relacional_>
<operador_relacional>
<aritmetica>
<aritmetica_>
<termo>
<termo_>
<fator>
<fator_>
<lista_de_instrucoes1>
<lista_de_identificadores1>
<atribuicao1>
<lista_de_entrada1>
<lista_de_expressoes1>
<lista_de_comandos1>
<manipulacao1>
<comando1>

#Grammar
<programa>::= pr_begin <lista_de_instrucoes> pr_end ;
<lista_de_instrucoes>::= <instrucao> ";" <lista_de_instrucoes1> ;
<lista_de_instrucoes1>::= î | <lista_de_instrucoes> ;

<instrucao>::= <dec_var> | <comando> ;
<dec_var>::= <tipo> <lista_de_identificadores> ;
<comando> ::= identificador <comando1>
            | <entrada_dados>
            | <saida_dados>
            | <selecao>
            | <repeticao> ;

<comando1> ::= <atribuicao1> <expressao>
             | <manipulacao1> ;  

<tipo>::= <tipos> | <list_tipo> ;
<tipos>::= pr_bool | pr_int | pr_float | pr_string ;
<list_tipo>::= pr_list "(" <tipos> "," constanteInt ")" ;
<lista_de_identificadores>::= identificador <lista_de_identificadores1> ;
<lista_de_identificadores1>::= î | "," <lista_de_identificadores> ;

<atribuicao1>::= "=" | "<-" ;

<manipulacao1> ::= pr_add "(" <elemento> "," <posicao> ")"
             | pr_delete "(" <posicao> ")" ;
<elemento>::= <expressao> ;
<posicao>::= <expressao> ;

<entrada_dados>::= pr_read "(" <lista_de_entrada> ")" ;
<lista_de_entrada>::= <constante_string> identificador <lista_de_entrada1> ;
<lista_de_entrada1>::= î | "," <lista_de_entrada> ;
<constante_string>::= constanteString "," | î ;

<saida_dados>::= pr_print "(" <lista_de_expressoes> ")" ;
<lista_de_expressoes>::= <expressao> <lista_de_expressoes1> ;
<lista_de_expressoes1>::= î | "," <lista_de_expressoes> ;


<selecao>::= pr_if <expressao> <lista_de_comandos> <else> pr_end ;
<lista_de_comandos>::= <comando> ";" <lista_de_comandos1> ;
<lista_de_comandos1>::= î | <lista_de_comandos> ;
<else>::= î | pr_else <lista_de_comandos> ;

<repeticao>::= pr_do <lista_de_comandos> pr_until <expressao> ;

<expressao> ::= <valor> <expressao_> ;
<expressao_> ::= î | pr_and <valor> <expressao_> | pr_or <valor> <expressao_> ;
<valor> ::= <relacional> | pr_true | pr_false | pr_not <valor> ;
<relacional> ::= <aritmetica> <relacional_> ;
<relacional_> ::= î | <operador_relacional> <aritmetica> ;
<operador_relacional>::= "==" | "~=" | "<" | ">" ;
<aritmetica> ::= <termo> <aritmetica_> ;
<aritmetica_> ::= î | "+" <termo> <aritmetica_> | "-" <termo> <aritmetica_> ;
<termo> ::= <fator> <termo_> ;
<termo_> ::= î | "*" <fator> <termo_> | "/" <fator> <termo_> ;
<fator> ::= identificador <fator_> |
 constanteInt |
 constanteFloat |
 constanteString |
 "(" <expressao> ")" |
 "+" <fator> |
 "-" <fator> ;
<fator_> ::= î | pr_count | pr_size | pr_elementOf "(" <expressao> ")" ; 
