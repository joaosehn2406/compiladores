package compiladores.gals;

public interface ParserConstants {

    int START_SYMBOL = 43;

    int FIRST_NON_TERMINAL = 43;
    int FIRST_SEMANTIC_ACTION = 83;

    int[][] PARSER_TABLE
            = {
                {-1, -1, -1, -1, -1, -1, -1, 0, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 1, -1, -1, -1, -1, -1, -1, 1, -1, -1, 1, -1, -1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 5, -1, -1, -1, -1, -1, -1, 4, -1, -1, 5, -1, -1, -1, -1, 4, 5, 4, 4, -1, -1, 5, 5, -1, 4, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, 6, -1, 6, 6, -1, -1, -1, -1, -1, 6, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 7, -1, -1, -1, -1, -1, -1, -1, -1, -1, 11, -1, -1, -1, -1, -1, 10, -1, -1, -1, -1, 9, 8, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, 14, -1, 14, 15, -1, -1, -1, -1, -1, 14, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, 16, -1, -1, -1, -1, -1, -1, -1, 18, -1, 17, -1, -1, -1, -1, -1, -1, 19, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 21, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 20, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 28, 28, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1, -1, 28, -1, -1, -1, -1, -1, 28, -1, 28, 28, -1, -1, -1, -1, -1, -1, -1, -1, 28, -1, -1, -1},
                {-1, 29, 29, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1, -1, 29, -1, -1, -1, -1, -1, 29, -1, 29, 29, -1, -1, -1, -1, -1, -1, -1, -1, 29, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 30, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 31, -1, -1, 31, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 35, -1, -1, 34, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 36, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 37, 37, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1, -1, 37, -1, -1, -1, -1, -1, 37, -1, 37, 37, -1, -1, -1, -1, -1, -1, -1, -1, 37, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 40, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 45, 44, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, -1, 41, -1, -1, -1, -1, 41, 41, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 46, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, 47, 47, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1, -1, 47, -1, -1, -1, -1, -1, 47, -1, 47, 47, -1, -1, -1, -1, -1, -1, -1, -1, 47, -1, -1, -1},
                {-1, 48, -1, -1, -1, -1, 49, -1, -1, -1, -1, 48, -1, -1, -1, -1, -1, 48, -1, -1, -1, 50, 48, 48, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 48, 48, 48},
                {-1, 51, 51, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 53, -1, -1, -1, -1, 54, -1, -1, -1, -1, -1, 52, -1, 51, 51, -1, -1, -1, -1, -1, -1, -1, -1, 51, -1, -1, -1},
                {-1, 55, 55, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 55, 55, -1, -1, -1, -1, -1, -1, -1, -1, 55, -1, -1, -1},
                {-1, 56, -1, -1, -1, -1, 56, -1, -1, -1, -1, 56, -1, -1, -1, -1, -1, 56, -1, -1, -1, 56, 56, 56, -1, -1, -1, -1, -1, -1, -1, -1, 57, 57, 57, 57, -1, -1, -1, 56, 56, 56},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 58, 59, 60, 61, -1, -1, -1, -1, -1, -1},
                {-1, 62, 62, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 62, 62, -1, -1, -1, -1, -1, -1, -1, -1, 62, -1, -1, -1},
                {-1, 63, -1, -1, -1, -1, 63, -1, -1, -1, -1, 63, -1, -1, -1, -1, -1, 63, -1, -1, -1, 63, 63, 63, -1, -1, -1, -1, 64, 65, -1, -1, 63, 63, 63, 63, -1, -1, -1, 63, 63, 63},
                {-1, 66, 66, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 66, 66, -1, -1, -1, -1, -1, -1, -1, -1, 66, -1, -1, -1},
                {-1, 67, -1, -1, -1, -1, 67, -1, -1, -1, -1, 67, -1, -1, -1, -1, -1, 67, -1, -1, -1, 67, 67, 67, -1, -1, -1, -1, 67, 67, 68, 69, 67, 67, 67, 67, -1, -1, -1, 67, 67, 67},
                {-1, 70, 71, 72, 73, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 75, 76, -1, -1, -1, -1, -1, -1, -1, -1, 74, -1, -1, -1},
                {-1, 77, -1, -1, -1, -1, 77, -1, -1, 78, -1, 77, 80, -1, -1, -1, -1, 77, -1, -1, -1, 77, 77, 77, 79, -1, -1, -1, 77, 77, 77, 77, 77, 77, 77, 77, -1, -1, -1, 77, 77, 77},
                {-1, 3, -1, -1, -1, -1, -1, -1, 3, -1, -1, 3, -1, -1, 2, -1, 3, 3, 3, 3, -1, -1, 3, 3, -1, 3, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 22, 23},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 24, 25, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 32, -1, 33},
                {-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 38, -1, 39},
                {-1, 43, -1, -1, -1, -1, -1, -1, -1, -1, -1, 43, -1, 42, 42, -1, -1, 43, -1, -1, -1, -1, 43, 43, -1, -1, -1, 42, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, 26, -1, -1, -1, -1, 27, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
                {-1, -1, -1, -1, -1, 13, -1, -1, -1, -1, 13, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, 12, 12, -1, -1, -1, -1}
            };

    int[][] PRODUCTIONS
            = {
                {8, 44, 15},
                {45, 41, 75},
                {0},
                {44},
                {46},
                {47},
                {48, 50},
                {2, 82},
                {54},
                {57},
                {59},
                {62},
                {77, 63},
                {81},
                {49},
                {51},
                {9},
                {19},
                {17},
                {26},
                {20, 39, 49, 42, 3, 40},
                {2, 76},
                {0},
                {42, 50},
                {37},
                {38},
                {6, 39, 52, 42, 53, 40},
                {11, 39, 53, 40},
                {63},
                {63},
                {24, 39, 55, 40},
                {56, 2, 78},
                {0},
                {42, 55},
                {5, 42},
                {0},
                {23, 39, 58, 40},
                {63, 79},
                {0},
                {42, 58},
                {18, 63, 61, 60, 15},
                {47, 41, 80},
                {0},
                {61},
                {0},
                {14, 61},
                {12, 61, 28, 63},
                {65, 64},
                {0},
                {7, 65, 64},
                {22, 65, 64},
                {66},
                {27},
                {16},
                {21, 65},
                {69, 67},
                {0},
                {68, 69},
                {33},
                {34},
                {35},
                {36},
                {71, 70},
                {0},
                {29, 71, 70},
                {30, 71, 70},
                {73, 72},
                {0},
                {31, 73, 72},
                {32, 73, 72},
                {2, 74},
                {3},
                {4},
                {5},
                {39, 63, 40},
                {29, 73},
                {30, 73},
                {0},
                {10},
                {25},
                {13, 39, 63, 40}
            };

    String[] PARSER_ERROR
            = {
                "",
                "esperado EOF", //"Era esperado fim de programa",
                "esperado identificador", //"Era esperado identificador",
                "esperado constante_int", //Era esperado constanteInt",
                "esperado constante_float", //"Era esperado constanteFloat",
                "esperado constante_string", //"Era esperado constanteString",
                "esperado add", //"Era esperado pr_add",
                "esperado and", //"Era esperado pr_and",
                "esperado begin", //"Era esperado pr_begin",
                "esperado bool", //"Era esperado pr_bool",
                "esperado count", //"Era esperado pr_count",
                "esperado delete", //"Era esperado pr_delete",
                "esperado do", //"Era esperado pr_do",
                "esperado element_of", //"Era esperado pr_elementOf",
                "esperado else", //"Era esperado pr_else",
                "esperado end", //"Era esperado pr_end",
                "esperado false", //"Era esperado pr_false",
                "esperado float", //"Era esperado pr_float",
                "esperado if", //"Era esperado pr_if",
                "esperado int", //"Era esperado pr_int",
                "esperado list",//"Era esperado pr_list",
                "esperado not",//"Era esperado pr_not",
                "esperado or",//"Era esperado pr_or",
                "esperado print",//"Era esperado pr_print",
                "esperado read",//"Era esperado pr_read",
                "esperado size",//"Era esperado pr_size",
                "esperado string",//"Era esperado pr_string",
                "esperado true",//"Era esperado pr_true",
                "esperado until",//"Era esperado pr_until",
                "esperado +", //"Era esperado \"+\"",
                "esperado -",//"Era esperado \"-\"",
                "esperado *",//"Era esperado \"*\"",
                "esperado /",//Era esperado \"/\"",
                "esperado ==",//Era esperado \"==\"",
                "esperado ~=",//Era esperado \"~=\"",
                "esperado <",//"Era esperado \"<\"",
                "esperado >",//"Era esperado \">\"",
                "esperado =",//"Era esperado \"=\"",
                "esperado <-",//"Era esperado \"<-\"",
                "esperado (",//Era esperado \"(\"",
                "esperado )",//"Era esperado \")\"",
                "esperado ;",//"Era esperado \";\"",
                "esperado ,",//"Era esperado \",\"",
                "esperado begin", //<programa> inválido",
                "esperado identificador do if print read tipo", //<lista_de_instrucoes> inválido",
                "esperado identificador do if print read tipo", //<instrucao> inválido",
                "esperado tipo", //<dec_var> inválido",
                "esperado identificador do if print read ", //<comando> inválido",
                "esperado tipo", //<tipo> inválido",
                "esperado bool float int string", //"<tipos> inválido",
                "esperado identificador", //"<lista_de_identificadores> inválido",
                "esperado list", //"<list_tipo> inválido",
                "esperado identificador constante_int constante_float constante_string false not true + - (", // <elemento> inválido
                "esperado identificador constante_int constante_float constante_string false not true + - (", // <posicao> inválido
                "esperado read", // <entrada_dados> inválido,
                "esperado identificador constante_string", //"<lista_de_entrada> inválido",
                "esperado identificador constante_string", //"<constante_string> inválido",
                "esperado print", //"<saida_dados> inválido",
                "esperado expressão", //"<lista_de_expressoes> inválido",
                "esperado expressão", //"<lista_de_expressoes1> inválido",
                "esperado if", //"<selecao> inválido",
                "esperado else end", //"<else> inválido",
                "esperado expressão",//"<lista_de_comandos> inválido",
                "esperado do", //"<repeticao> inválido",
                "esperado expressão", //"<expressao> inválido",
                "esperado expressão", //"<expressao_> inválido",
                "esperado expressão", //"<valor> inválido",
                "esperado expressão", //"<relacional> inválido",
                "esperado expressão", //"<relacional_> inválido",
                "esperado == ≃= < >", //"<operador_relacional> inválido",
                "esperado expressão", //"<aritmetica> inválido",
                "esperado expressão", //"<aritmetica_> inválido",
                "esperado expressão", //"<termo> inválido",
                "esperado expressão", //"<termo_> inválido",
                "esperado expressão", //"<fator> inválido",
                "esperado expressão", //"<fator_> inválido",
                "esperado identificador do end if print read tipo", //"<lista_de_instrucoes1> inválido",
                "esperado ; ,", //"<lista_de_identificadores1> inválido",
                "esperado = <-", //"<atribuicao1> inválido",
                "esperado ) ,", //"<lista_de_entrada1> inválido",
                "esperado identificador do else end if print read", //"<lista_de_comandos1> inválido",
                "esperado add delete", //"<manipulacao1> inválido",
                "esperado add delete = <-", //"<comando1> inválido"
            };
}
